#!/usr/bin/env ruby
#  Copyright Â© 2014-2021 David Caldwell
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

require 'optparse'
require_relative 'verbose-shell'
Vsh = VerboseShell

(opts=OptionParser.new do |opts|
  opts.banner = "Usage:\n\t#{$0} <URL> [options]"
  opts.on("-v", "--verbose", "Turn up the verbosity") { |v| Vsh.verbose = true }
  opts.on_tail("-h", "--help") { puts opts; exit }
end).parse!

url=ARGV.shift || opts.abort("Missing <URL>\n\n"+opts.help)

url=url.sub(%r{([^/])$}, "\\1/")

version = []
IO.popen(["curl", "-s", url]) do |io|
  while io.gets
    $_.chomp!
    if $_ =~ /(\d+) (\w+ \d+ (?: \d+|\d+:\d+)) (emacs-([\d.]+(?:-rc\d*|[a-z])?).tar.[xg]z)/
      version.push( { :version=>Gem::Version.new($4), :file=>$3, :date=>$2, :size=>$1, :url => url+$3 } )
    end
  end
end

latest = version.sort{|a,b| a[:version] <=> b[:version]}.last

Vsh.system *(%W(curl --continue-at - --silent -O #{latest[:url]}))

# Old Mac OS Versions don't have .xz support. Rather than requiring installing it, just convert to .bz2 which *is* supported.
newfile=File.basename(latest[:file], '.xz')+'.bz2'
Vsh.system('bash', '-c', 'xzcat "$0" | bzip2 > "$1"', latest[:file], newfile)

#File.unlink(latest[:file]) # Keep the original around for now.
