#!/usr/bin/env ruby
#  Copyright Â© 2016-2017 David Caldwell
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

require 'optparse'
require 'json'
require File.join File.expand_path(File.dirname(__FILE__)),'verbose-shell.rb'

def with_env(env)
  saved = {}
  env.each {|k,v| saved[k] = ENV[k]; ENV[k] = v }
  yield
  saved.each {|k,v| ENV[k] = v }
end

def ensure_brew(dir, packages, options)
  vsh = VerboseShell
  vsh.verbose = options[:verbose]

  vsh.system(*%W"git clone https://github.com/Homebrew/brew.git #{dir}") || abort("git failed!") unless File.exist?(dir)

  get_source = options[:get_source] && File.expand_path(options[:get_source])
  if get_source
    vsh.mkdir_p(get_source)
    vsh.cp(File.join(File.dirname(__FILE__),'brew-source.rb'), File.join(dir,'bin'))
  end

  FileUtils.cd(dir) do
    vsh.system(*%W"git checkout #{options[:gitrev]}") || abort("git failed!") if options[:gitrev]

    with_env 'PATH' => "#{Dir.pwd}/bin:#{ENV['PATH']}" do
      vsh.system(*%W"brew update") unless options[:gitrev]
      packages.each do |package|
        info = IO.popen(%W"brew info --json=v1 #{package}") { |io| JSON.parse(io.read) }[0]
        if info['linked_keg']
          vsh.system(*%W"brew upgrade #{package}") if info['outdated']
        else
          vsh.system(*%W"brew install #{package}")
        end
        vsh.system(*%W"brew source #{package} #{get_source}") if get_source
      end
    end
  end
end

if $0 == __FILE__
  gitrev = nil
  get_source = nil
  verbose = nil

  (opts=OptionParser.new do |opts|
     opts.banner = "Usage:\n\t#{$0} [options] <DIRECTORY> [<PACKAGE> ...]"
     opts.on("-v", "--verbose",                 "Turn up the verbosity")                          { |v|   verbose = true }
     opts.on(      "--checkout=<GIT_REVISION>", "Checkout a particular git revision of homebrew") { |rev| gitrev = rev }
     opts.on(      "--get-source=<SOURCE_DIR>", "Also fetch sources into SOURCE_DIR")             { |dir| get_source = dir }
     opts.on_tail("-h", "--help") { puts opts; exit }
   end).parse!

  dir    = ARGV.shift || opts.abort("Missing <DIRECTORY>\n\n"+opts.help)

  ensure_brew(dir, ARGV, :gitrev => gitrev, :get_source => get_source, :verbose=>verbose)
end
