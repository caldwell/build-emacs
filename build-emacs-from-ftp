#!/bin/sh
set -e

cd `dirname $0`

. ./notify
. ./build-emacs-functions

FTP_DIR_URL=${1:?"1st arg should be an ftp url"}
LABEL=$2-
LABEL=${LABEL#-}

eval `env LC_ALL=C curl -s "$FTP_DIR_URL/" | perl -MSort::Versions -ne 'push @v, { s=>$1, d=>$2, p=>$3, v=>$4 } if /(\d+) (\w+ \d+ (?: \d+|\d+:\d+)) (emacs-([\d.]+(?:-rc\d*|[a-z])?).tar.[xg]z)/; END { %r = %{${[sort { versioncmp $b->{v}, $a->{v} } @v]}[0]}; print "SIZE=$r{s}\nLATEST=$r{p}\nVERSION=$r{v}\nDATE=\"$r{d}\"\n" }'`

# Prevent clean() from removing the whole directory when the above regular expression fails. Grrrrr.
if [ x$LATEST = x ]; then
	echo "Error retrieving latest version number from $FTP_DIR_URL." 1>&2
	exit 1
fi

mkdir -p ftp-versions

if [ \! -f ftp-versions/$LATEST ]; then
	(cd ftp-versions && curl -s -O "$FTP_DIR_URL/$LATEST")
else
	if [ `stat -f "%z" ftp-versions/$LATEST` != $SIZE ]; then
		(cd ftp-versions && curl -C - -s -O "$FTP_DIR_URL/$LATEST")
	fi
fi

if ls emacs-builds/Emacs-${LABEL}$VERSION-*-*.* > /dev/null 2>&1; then
	# Already built? Done.
	exit 2
fi

DIR=ftp-versions/$LATEST
DIR=${DIR%%.tar.gz}
DIR=${DIR%%.tar.xz}

CAT=gzcat
[[ $LATEST =~ \.xz$ ]] && CAT=xzcat

$CAT ftp-versions/$LATEST | /usr/bin/tar x -s ",^[^/]*,$DIR,"

build_emacs "$DIR" "Emacs-${LABEL}$VERSION" || exit $?

TOUCHDATE=`perl -MPOSIX -MDate::Parse -e 'print strftime "%Y%m%d%H%M.%S", localtime str2time '"'$DATE';"`

touch -c -t "$TOUCHDATE" emacs-builds/Emacs-${LABEL}$VERSION-*
